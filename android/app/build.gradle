def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.huawei.agconnect'

android {
    compileSdkVersion 31
//    useOldManifestMerger true
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.daivp.hatchery_im"
        multiDexEnabled true
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            abiFilters.clear()
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "9d8b80bc783241abdf1f8ae0", // NOTE: JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.

                XIAOMI_APPID  : "MI-2882303761520132871",
                XIAOMI_APPKEY : "MI-112013276871",

                OPPO_APPKEY : "OP-570e5a14cc0b4e16b27ef146ab06d8b8", // OPPO平台注册的appkey
                OPPO_APPID : "OP-30739725", // OPPO平台注册的appid
                OPPO_APPSECRET: "OP-35da3282b5f749b6b74e96cd50e3e2c2",//OPPO平台注册的appsecret

                VIVO_APPKEY : "xxxxxxx", // VIVO平台注册的appkey
                VIVO_APPID : "xxxxxx", // VIVO平台注册的appid
        ]
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable false

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64", "armeabi", "armeabi-v7a", "arm64-v8a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

    //配置签名文件
    signingConfigs {
        debug {
            //keystore中key的别名
            keyAlias 'androiddebugkey'
            //keystore中key的密码
            keyPassword 'lichen47718946'
            //keystore的文件路径，可以是绝对路径也可以是相对路径
            storeFile file('debug.keystore')
            //keystore的密码
            storePassword 'lichen47718946'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation('com.amap.api:3dmap:8.1.0')
    implementation('com.amap.api:location:5.6.0')
    implementation 'com.huawei.hms:push:5.3.0.301'
    implementation 'cn.jiguang.sdk.plugin:huawei:4.0.6'
    implementation 'cn.jiguang.sdk.plugin:xiaomi:4.0.6'//版本号和对应的JPush版本号相同
    implementation 'cn.jiguang.sdk.plugin:oppo:4.0.6'//版本号和对应的JPush版本号相同
    implementation 'cn.jiguang.sdk.plugin:vivo:4.0.6'//版本号和对应的JPush版本号相同
}
